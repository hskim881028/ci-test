name: Build
'on':
  push:
    branches:
      - main
      - rc
  workflow_dispatch: null
jobs:
  buildDocs:
    name: Build Docs
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Docfx
        run: choco install -y docfx
      - name: Use README.md as index.md
        run: cp README.md Documentation/index.md
      - name: Build Docfx
        run: docfx Documentation/docfx.json
      - name: Upload site artifact
        uses: actions/upload-artifact@v1
        with:
          name: _site
          path: _site
  deployDocs:
    name: Deploy Docs
    needs:
      - buildDocs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout hskim881028/ci-test Repository
        uses: actions/checkout@v2
        with:
          repository: hskim881028/ci-test
          token: '${{ secrets.PAT }}'
      - name: Download site artifact
        uses: actions/download-artifact@v1
        with:
          name: _site
      - name: Deploy to hskim881028/ci-test Repository
        run: |
          cp -r _site/* .
          git config user.name hskim881028
          git config user.email hskim881028@gmail.com
          git add .
          git commit -m "docs: Deploy docs"
          git push
  buildForAllSupportedPlatforms:
    name: 'Build for ${{ matrix.targetPlatform }}'
    needs:
      - deployDocs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows64
    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: false
          haskell: false
          large-packages: false
          docker-images: false
          swap-storage: false
      - name: Check out
        uses: actions/checkout@v4
      - name: Cache library
        uses: actions/cache@v4
        with:
          path: Library
          key: >-
            Library-${{ hashFiles('Assets/**', 'Packages/**',
            'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Unity build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: '${{ secrets.UNITY_LICENSE }}'
          UNITY_EMAIL: '${{ secrets.UNITY_EMAIL }}'
          UNITY_PASSWORD: '${{ secrets.UNITY_PASSWORD }}'
        with:
          targetPlatform: '${{ matrix.targetPlatform }}'
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'Build-${{ matrix.targetPlatform }}'
          path: 'build/${{ matrix.targetPlatform }}'
  notifySlack:
    name: Notify Slack
    needs:
      - buildForAllSupportedPlatforms
    runs-on: ubuntu-latest
    steps:
      - name: Notify to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Artifact>"
            }
        env:
          SLACK_WEBHOOK_URL: '${{ secrets.SLACK_WEBHOOK_URL }}'
